<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lawu.chick.repository.mapper.InventoryDOMapper">
  <resultMap id="BaseResultMap" type="com.lawu.chick.repository.domain.InventoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_num" jdbcType="VARCHAR" property="productNum" />
    <result column="member_num" jdbcType="VARCHAR" property="memberNum" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="joyful_val" jdbcType="INTEGER" property="joyfulVal" />
    <result column="is_joyful_first" jdbcType="BIT" property="isJoyfulFirst" />
    <result column="joyful_limit" jdbcType="INTEGER" property="joyfulLimit" />
    <result column="growth_val" jdbcType="INTEGER" property="growthVal" />
    <result column="is_growth_first" jdbcType="BIT" property="isGrowthFirst" />
    <result column="growth_limit" jdbcType="INTEGER" property="growthLimit" />
    <result column="full_val" jdbcType="INTEGER" property="fullVal" />
    <result column="is_full_first" jdbcType="BIT" property="isFullFirst" />
    <result column="full_limit" jdbcType="INTEGER" property="fullLimit" />
    <result column="day_usage_limit" jdbcType="INTEGER" property="dayUsageLimit" />
    <result column="keep_clean_time" jdbcType="INTEGER" property="keepCleanTime" />
    <result column="clean_limit" jdbcType="INTEGER" property="cleanLimit" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, product_num, member_num, name, quantity, type, joyful_val, is_joyful_first, joyful_limit, 
    growth_val, is_growth_first, growth_limit, full_val, is_full_first, full_limit, day_usage_limit, 
    keep_clean_time, clean_limit, gmt_modified, gmt_create
  </sql>
  <select id="selectByExample" parameterType="com.lawu.chick.repository.domain.InventoryDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from inventory
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from inventory
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lawu.chick.repository.domain.InventoryDOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lawu.chick.repository.domain.InventoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into inventory (product_num, member_num, name, 
      quantity, type, joyful_val, 
      is_joyful_first, joyful_limit, growth_val, 
      is_growth_first, growth_limit, full_val, 
      is_full_first, full_limit, day_usage_limit, 
      keep_clean_time, clean_limit, gmt_modified, 
      gmt_create)
    values (#{productNum,jdbcType=VARCHAR}, #{memberNum,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{joyfulVal,jdbcType=INTEGER}, 
      #{isJoyfulFirst,jdbcType=BIT}, #{joyfulLimit,jdbcType=INTEGER}, #{growthVal,jdbcType=INTEGER}, 
      #{isGrowthFirst,jdbcType=BIT}, #{growthLimit,jdbcType=INTEGER}, #{fullVal,jdbcType=INTEGER}, 
      #{isFullFirst,jdbcType=BIT}, #{fullLimit,jdbcType=INTEGER}, #{dayUsageLimit,jdbcType=INTEGER}, 
      #{keepCleanTime,jdbcType=INTEGER}, #{cleanLimit,jdbcType=INTEGER}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{gmtCreate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lawu.chick.repository.domain.InventoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into inventory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productNum != null">
        product_num,
      </if>
      <if test="memberNum != null">
        member_num,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="joyfulVal != null">
        joyful_val,
      </if>
      <if test="isJoyfulFirst != null">
        is_joyful_first,
      </if>
      <if test="joyfulLimit != null">
        joyful_limit,
      </if>
      <if test="growthVal != null">
        growth_val,
      </if>
      <if test="isGrowthFirst != null">
        is_growth_first,
      </if>
      <if test="growthLimit != null">
        growth_limit,
      </if>
      <if test="fullVal != null">
        full_val,
      </if>
      <if test="isFullFirst != null">
        is_full_first,
      </if>
      <if test="fullLimit != null">
        full_limit,
      </if>
      <if test="dayUsageLimit != null">
        day_usage_limit,
      </if>
      <if test="keepCleanTime != null">
        keep_clean_time,
      </if>
      <if test="cleanLimit != null">
        clean_limit,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productNum != null">
        #{productNum,jdbcType=VARCHAR},
      </if>
      <if test="memberNum != null">
        #{memberNum,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="joyfulVal != null">
        #{joyfulVal,jdbcType=INTEGER},
      </if>
      <if test="isJoyfulFirst != null">
        #{isJoyfulFirst,jdbcType=BIT},
      </if>
      <if test="joyfulLimit != null">
        #{joyfulLimit,jdbcType=INTEGER},
      </if>
      <if test="growthVal != null">
        #{growthVal,jdbcType=INTEGER},
      </if>
      <if test="isGrowthFirst != null">
        #{isGrowthFirst,jdbcType=BIT},
      </if>
      <if test="growthLimit != null">
        #{growthLimit,jdbcType=INTEGER},
      </if>
      <if test="fullVal != null">
        #{fullVal,jdbcType=INTEGER},
      </if>
      <if test="isFullFirst != null">
        #{isFullFirst,jdbcType=BIT},
      </if>
      <if test="fullLimit != null">
        #{fullLimit,jdbcType=INTEGER},
      </if>
      <if test="dayUsageLimit != null">
        #{dayUsageLimit,jdbcType=INTEGER},
      </if>
      <if test="keepCleanTime != null">
        #{keepCleanTime,jdbcType=INTEGER},
      </if>
      <if test="cleanLimit != null">
        #{cleanLimit,jdbcType=INTEGER},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lawu.chick.repository.domain.InventoryDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update inventory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productNum != null">
        product_num = #{record.productNum,jdbcType=VARCHAR},
      </if>
      <if test="record.memberNum != null">
        member_num = #{record.memberNum,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.joyfulVal != null">
        joyful_val = #{record.joyfulVal,jdbcType=INTEGER},
      </if>
      <if test="record.isJoyfulFirst != null">
        is_joyful_first = #{record.isJoyfulFirst,jdbcType=BIT},
      </if>
      <if test="record.joyfulLimit != null">
        joyful_limit = #{record.joyfulLimit,jdbcType=INTEGER},
      </if>
      <if test="record.growthVal != null">
        growth_val = #{record.growthVal,jdbcType=INTEGER},
      </if>
      <if test="record.isGrowthFirst != null">
        is_growth_first = #{record.isGrowthFirst,jdbcType=BIT},
      </if>
      <if test="record.growthLimit != null">
        growth_limit = #{record.growthLimit,jdbcType=INTEGER},
      </if>
      <if test="record.fullVal != null">
        full_val = #{record.fullVal,jdbcType=INTEGER},
      </if>
      <if test="record.isFullFirst != null">
        is_full_first = #{record.isFullFirst,jdbcType=BIT},
      </if>
      <if test="record.fullLimit != null">
        full_limit = #{record.fullLimit,jdbcType=INTEGER},
      </if>
      <if test="record.dayUsageLimit != null">
        day_usage_limit = #{record.dayUsageLimit,jdbcType=INTEGER},
      </if>
      <if test="record.keepCleanTime != null">
        keep_clean_time = #{record.keepCleanTime,jdbcType=INTEGER},
      </if>
      <if test="record.cleanLimit != null">
        clean_limit = #{record.cleanLimit,jdbcType=INTEGER},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update inventory
    set id = #{record.id,jdbcType=BIGINT},
      product_num = #{record.productNum,jdbcType=VARCHAR},
      member_num = #{record.memberNum,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      joyful_val = #{record.joyfulVal,jdbcType=INTEGER},
      is_joyful_first = #{record.isJoyfulFirst,jdbcType=BIT},
      joyful_limit = #{record.joyfulLimit,jdbcType=INTEGER},
      growth_val = #{record.growthVal,jdbcType=INTEGER},
      is_growth_first = #{record.isGrowthFirst,jdbcType=BIT},
      growth_limit = #{record.growthLimit,jdbcType=INTEGER},
      full_val = #{record.fullVal,jdbcType=INTEGER},
      is_full_first = #{record.isFullFirst,jdbcType=BIT},
      full_limit = #{record.fullLimit,jdbcType=INTEGER},
      day_usage_limit = #{record.dayUsageLimit,jdbcType=INTEGER},
      keep_clean_time = #{record.keepCleanTime,jdbcType=INTEGER},
      clean_limit = #{record.cleanLimit,jdbcType=INTEGER},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lawu.chick.repository.domain.InventoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update inventory
    <set>
      <if test="productNum != null">
        product_num = #{productNum,jdbcType=VARCHAR},
      </if>
      <if test="memberNum != null">
        member_num = #{memberNum,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="joyfulVal != null">
        joyful_val = #{joyfulVal,jdbcType=INTEGER},
      </if>
      <if test="isJoyfulFirst != null">
        is_joyful_first = #{isJoyfulFirst,jdbcType=BIT},
      </if>
      <if test="joyfulLimit != null">
        joyful_limit = #{joyfulLimit,jdbcType=INTEGER},
      </if>
      <if test="growthVal != null">
        growth_val = #{growthVal,jdbcType=INTEGER},
      </if>
      <if test="isGrowthFirst != null">
        is_growth_first = #{isGrowthFirst,jdbcType=BIT},
      </if>
      <if test="growthLimit != null">
        growth_limit = #{growthLimit,jdbcType=INTEGER},
      </if>
      <if test="fullVal != null">
        full_val = #{fullVal,jdbcType=INTEGER},
      </if>
      <if test="isFullFirst != null">
        is_full_first = #{isFullFirst,jdbcType=BIT},
      </if>
      <if test="fullLimit != null">
        full_limit = #{fullLimit,jdbcType=INTEGER},
      </if>
      <if test="dayUsageLimit != null">
        day_usage_limit = #{dayUsageLimit,jdbcType=INTEGER},
      </if>
      <if test="keepCleanTime != null">
        keep_clean_time = #{keepCleanTime,jdbcType=INTEGER},
      </if>
      <if test="cleanLimit != null">
        clean_limit = #{cleanLimit,jdbcType=INTEGER},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lawu.chick.repository.domain.InventoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update inventory
    set product_num = #{productNum,jdbcType=VARCHAR},
      member_num = #{memberNum,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      joyful_val = #{joyfulVal,jdbcType=INTEGER},
      is_joyful_first = #{isJoyfulFirst,jdbcType=BIT},
      joyful_limit = #{joyfulLimit,jdbcType=INTEGER},
      growth_val = #{growthVal,jdbcType=INTEGER},
      is_growth_first = #{isGrowthFirst,jdbcType=BIT},
      growth_limit = #{growthLimit,jdbcType=INTEGER},
      full_val = #{fullVal,jdbcType=INTEGER},
      is_full_first = #{isFullFirst,jdbcType=BIT},
      full_limit = #{fullLimit,jdbcType=INTEGER},
      day_usage_limit = #{dayUsageLimit,jdbcType=INTEGER},
      keep_clean_time = #{keepCleanTime,jdbcType=INTEGER},
      clean_limit = #{cleanLimit,jdbcType=INTEGER},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.lawu.chick.repository.domain.InventoryDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>